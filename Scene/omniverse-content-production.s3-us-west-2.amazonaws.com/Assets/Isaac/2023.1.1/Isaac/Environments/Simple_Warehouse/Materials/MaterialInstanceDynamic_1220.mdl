mdl 1.3;

import ::math::*;
import ::state::*;
import ::tex::*;
import ::anno::*;
using OmniUe4Function import *;
using OmniUe4Base import *;

export annotation sampler_color();
export annotation sampler_normal();
export annotation sampler_grayscale();
export annotation sampler_alpha();
export annotation sampler_masks();
export annotation sampler_distancefield();
export annotation dither_masked_off();
export annotation world_space_normal();

export material MaterialInstanceDynamic_1220(
	uniform texture_2d NormalMap_Box = texture_2d("./Textures/T_CardBoxA_N.png",::tex::gamma_linear)
	[[sampler_normal()]],
	float U_Tiling = 4.0,
	float V_Tiling = 4.0,
	float PlasticNormalAlpha = 0.75,
	uniform texture_2d BaseColor_Box = texture_2d("./Textures/T_CardBoxA_D.png",::tex::gamma_srgb)
	[[sampler_color()]],
	float4 BaseColorBox_Tint = float4(1.0,1.0,1.0,1.0),
	uniform texture_2d BaseColor_Plastic = texture_2d("./Textures/T_PlasticWrap_D.png",::tex::gamma_srgb)
	[[sampler_color()]],
	float4 BaseColorPlastic_Tint = float4(0.16,0.19,0.2,1.0),
	float PlasticOpacity = 0.45,
	uniform texture_2d MultiMap_Plastic = texture_2d("./Textures/T_PlasticWrap_ORM.png",::tex::gamma_linear)
	[[sampler_color()]],
	float RoughnessMin = 0.0,
	float RoughnessMax = 0.05,
	uniform texture_2d MultiMap_Box = texture_2d("./Textures/T_CardBoxA_ORM.png",::tex::gamma_linear)
	[[sampler_color()]])
 = 
	let {
	float3 WorldPositionOffset_mdl = float3(0.0,0.0,0.0);
	float2 CustomizedUV0_mdl = float2(state::texture_coordinate(0).x,1.0-state::texture_coordinate(0).y);

	float4 Local0 = ::unpack_normal_map(tex::lookup_float4(NormalMap_Box,float2(CustomizedUV0_mdl.x,1.0-CustomizedUV0_mdl.y),tex::wrap_repeat,tex::wrap_repeat));
	float2 Local1 = (CustomizedUV0_mdl * float2(U_Tiling,V_Tiling));
	float4 Local2 = ::unpack_normal_map(tex::lookup_float4(texture_2d("./Textures/T_PlasticWrap_N.png",::tex::gamma_linear),float2(Local1.x,1.0-Local1.y),tex::wrap_repeat,tex::wrap_repeat));
	float3 Local3 = math::lerp(float3(Local0.x,Local0.y,Local0.z),float3(Local2.x,Local2.y,Local2.z),PlasticNormalAlpha);

	float3 Normal_mdl = Local3;

	float4 Local4 = tex::lookup_float4(BaseColor_Box,float2(CustomizedUV0_mdl.x,1.0-CustomizedUV0_mdl.y),tex::wrap_repeat,tex::wrap_repeat);
	float3 Local5 = (float3(Local4.x,Local4.y,Local4.z) * float3(BaseColorBox_Tint.x,BaseColorBox_Tint.y,BaseColorBox_Tint.z));
	float4 Local6 = tex::lookup_float4(BaseColor_Plastic,float2(Local1.x,1.0-Local1.y),tex::wrap_repeat,tex::wrap_repeat);
	float3 Local7 = (float3(Local6.x,Local6.y,Local6.z) * float3(BaseColorPlastic_Tint.x,BaseColorPlastic_Tint.y,BaseColorPlastic_Tint.z));
	float Local8 = (1.0 - Local2.z);
	float Local9 = (PlasticOpacity + Local8);
	float Local10 = math::min(math::max(Local9,0.0),1.0);
	float3 Local11 = math::lerp(Local5,Local7,Local10);
	float4 Local12 = tex::lookup_float4(MultiMap_Plastic,float2(Local1.x,1.0-Local1.y),tex::wrap_repeat,tex::wrap_repeat);
	float Local13 = math::min(math::max(Local12.y,RoughnessMin),RoughnessMax);

	float3 EmissiveColor_mdl = float3(0.0,0.0,0.0);
	float OpacityMask_mdl = 1.0;
	float3 BaseColor_mdl = Local11;
	float Metallic_mdl = Local12.z;
	float Specular_mdl = 0.5;
	float Roughness_mdl = Local13;

	} in
		::OmniUe4Base(
			base_color: BaseColor_mdl,
			metallic: Metallic_mdl,
			roughness: Roughness_mdl,
			specular: Specular_mdl,
			normal: Normal_mdl,
			opacity: OpacityMask_mdl,
			emissive_color: EmissiveColor_mdl,
			displacement: WorldPositionOffset_mdl,
			two_sided: false);
